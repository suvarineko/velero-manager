1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "velero-manager.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "velero-manager.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "velero-manager.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "velero-manager.selectorLabels" . }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Velero Manager Configuration:
   - Velero Namespace: {{ .Values.velero.namespace }}
   - Default Backup TTL: {{ .Values.velero.defaultBackupTTL }}
   - Backup Storage Location: {{ .Values.velero.backupStorageLocation }}

3. Important Notes:
   {{- if .Values.rbac.create }}
   - RBAC resources have been created with necessary permissions for Velero operations
   {{- else }}
   - WARNING: RBAC is disabled. Ensure your service account has necessary permissions
   {{- end }}
   {{- if .Values.persistence.enabled }}
   - Persistent storage is enabled for application data
   {{- else }}
   - WARNING: Persistence is disabled. Application data will be lost on pod restart
   {{- end }}
   {{- if .Values.sidecar.enabled }}
   - Sidecar container is enabled: {{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}
   {{- end }}

4. Troubleshooting:
   - Check pod status: kubectl get pods -n {{ .Release.Namespace }} -l "{{ include "velero-manager.selectorLabels" . }}"
   - View logs: kubectl logs -n {{ .Release.Namespace }} -l "{{ include "velero-manager.selectorLabels" . }}" -f
   - Check service: kubectl get svc -n {{ .Release.Namespace }} {{ include "velero-manager.fullname" . }}

5. Configuration:
   - To customize the deployment, modify values in your values.yaml file
   - For development mode, set app.devMode=true and app.logLevel=DEBUG
   - For production, ensure proper resource limits and security contexts are configured